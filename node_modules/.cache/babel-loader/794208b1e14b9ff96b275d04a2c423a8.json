{"ast":null,"code":"var _jsxFileName = \"/Users/mchan/Workspace/MiniWorkProjects/adp_animate_mount_unmount/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Modal from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModalOpen: false\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    };\n\n    this.render = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleModal,\n        children: \"Toggle Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Modal is: \", this.state.isModalOpen ? \"Open\" : \"Closed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), this.state.isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        isModalOpen: this.state.isModalOpen,\n        onClose: this.toggleState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mchan/Workspace/MiniWorkProjects/adp_animate_mount_unmount/src/App.js"],"names":["React","Component","Modal","App","state","isModalOpen","toggleModal","setState","render","toggleState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,IAAlB;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACNC,MAAAA,WAAW,EAAE;AADP,KAFiC;;AAAA,SAMzCC,WANyC,GAM3B,MAAM;AAClB,WAAKC,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA1B,OAAd;AACD,KARwC;;AAAA,SAUzCG,MAVyC,GAUhC,mBACP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,iCAAgB,KAAKF,KAAL,CAAWC,WAAX,GAAyB,MAAzB,GAAkC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,KAAKD,KAAL,CAAWC,WAAX,iBACC,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAD1B;AAEE,QAAA,OAAO,EAAE,KAAKI;AAFhB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXuC;AAAA;;AAAA","sourcesContent":["import React, {Component} from 'react'\nimport './App.css'\nimport Modal from './'\n\nexport default class App extends Component {\n\n  state = {\n    isModalOpen: false\n  }\n\n  toggleModal = () => {\n    this.setState({isModalOpen: !this.state.isModalOpen})\n  }\n\n  render = () => (\n    <div className=\"App\">\n      <button onClick={this.toggleModal}>Toggle Modal</button>\n      <div>Modal is: {this.state.isModalOpen ? \"Open\" : \"Closed\"}</div>\n      {this.state.isModalOpen && (\n        <Modal\n          isModalOpen={this.state.isModalOpen}\n          onClose={this.toggleState}\n        />\n      )}\n    </div>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}